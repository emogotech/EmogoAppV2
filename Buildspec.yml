 
version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto8
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:./sonar-scanner-3.3.0.1492-linux/bin/
      - export SONAR_SCANNER_OPTS="-Xmx512m"
      - $(aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      #- sonar-scanner -Dsonar.projectKey=emogo-v2 -Dsonar.sources=. -Dsonar.host.url=http://sonar.northout.net -Dsonar.login=76c331471abbd6a9a56d566ca7f13a42f9aef107
      #- sh -x sonar-status.sh
      - docker --version
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo renaming _Dockerrun.aws.json file
      - mv $DOCKERRUN Dockerrun.aws.json
      - echo deleting Dockerfile
      - chmod +x start.sh
      - rm Dockerfile
artifacts:
  files:
    - '**/*'

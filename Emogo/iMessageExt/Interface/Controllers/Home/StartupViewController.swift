//
//  StartupViewController.swift
//  iMessageExt
//
//  Created by Sushobhit on 24/11/17.
//  Copyright Â© 2017 Vikas Goyal. All rights reserved.
//

import UIKit
import Messages

class StartupViewController: MSMessagesAppViewController {
    
    // MARK: - Variables
    override func viewDidLoad() {
        super.viewDidLoad()
        SharedData.sharedInstance.resetAllData()
             NotificationCenter.default.addObserver(self, selector: #selector(self.requestMessageScreenChangeStyle), name: NSNotification.Name(rawValue: iMsgNotificationManageRequestStyle), object: nil)
    }
    
    // MARK: - Screen Size Handling
    @objc func requestMessageScreenChangeStyle(){
        requestPresentationStyle(.expanded)
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        print("viewDidAppear")
        
        self.perform(#selector(self.showLoader), with: nil, afterDelay: 1.0)
    }
    

    @objc func showLoader() {
        self.perform(#selector(self.checkForIsAvailable), with: nil, afterDelay: 1.0)
    }
    
    @objc func checkForIsAvailable(){
        if SharedData.sharedInstance.dictUserInfo().count > 0 {
            let obj : HomeViewController  = self.storyboard!.instantiateViewController(withIdentifier: iMsgSegue_Home) as! HomeViewController
                self.present(obj, animated: false, completion: nil)
        }else{
            let obj : MessagesViewController  = self.storyboard!.instantiateViewController(withIdentifier: iMsgSegue_MessageView) as! MessagesViewController
                self.present(obj, animated: false, completion: nil)
        }
    }
    
    // MARK: - Conversation Handling
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
    
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        
        if(presentationStyle == .expanded) {
            SharedData.sharedInstance.isMessageWindowExpand = true
        }
        else {
            SharedData.sharedInstance.isMessageWindowExpand = false
        }
        NotificationCenter.default.post(name: NSNotification.Name(iMsgNotificationManageScreen), object: nil)
        
        // Called before the extension transitions to a new presentation style.
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
        
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }
    
    // MARK: - Delegate Methods of Segue
    override func shouldPerformSegue(withIdentifier identifier: String?, sender: Any?) -> Bool {
        return false
    }
    
}
